@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  height: 100%;
  overflow-y: scroll;
  box-sizing: border-box;
}
html, body {
  overflow-x: hidden;
}
body {
  position: relative;
  margin: 0;
  min-height: 100%;
}
* {
  box-sizing: border-box;
  -webkit-user-drag: none;
  margin: 0;
  padding: 0;
  &:focus {
    outline: none;
  }
  &:before, &:after {
    box-sizing: border-box;
  }
}
a {
  color: inherit;
  background-color: transparent;
}
a, a:hover {
  outline: none;
  text-decoration: none;
}
blockquote:before, blockquote:after, q:before, q:after {
  content: '';
}
fieldset {
  border: none;
}
hr {
  box-sizing: content-box;
  -moz-box-sizing: content-box;
  border: none;
}
img, video {
  height: auto;
}
img, object, iframe, embed, figure, video {
  border: none;
  max-width: 100%;
  vertical-align: top;
}
input:-webkit-autofill, textarea:-webkit-autofill {
  outline: none;
}
input {
  border-radius: 0;
  -webkit-appearance: none;
}
input::-moz-focus-inner, button::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input[type='checkbox'], input[type='radio'] {
  padding: 0;
}
input[type='button'], input[type='submit'], input[type='reset'], button {
  border-style: none;
  border-width: 0;
  max-width: none;
  overflow: visible;
  width: auto;
  -webkit-appearance: button;
}
input[type='search']::-webkit-search-decoration, input[type='search']::-webkit-search-cancel-button {
  -webkit-appearance: none;
}
label, input[type='submit'], input[type='button'], button {
  cursor: pointer;
}
input[type="range"] {
  -webkit-appearance: none;
  position: relative;
  appearance: none;
  background: transparent;
  cursor: pointer;
}
input[type="range"]::-webkit-slider-runnable-track {
  height: 0.25rem;
  background: #fff;
  border-radius: 4rem;
}
input[type="range"]::-moz-range-track {
  height: 0.25rem;
  background: #fff;
  border-radius: 4rem;
}
input[type="range"]::before {
  position: absolute;
  content: "";
  left: 0;
  width: var(--seek-before-width);
  height: 100%;
  background-color: #d1d5db;
  cursor: pointer;
  border-radius: 4rem;
  z-index: 0;
}
input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  margin-top: -0.125rem;
  background-color: #d1d5db;
  height: 0.5rem;
  width: 0.5rem;
  border-radius: 100%;
  transition: .1s;
  z-index: 10;
}
input[type="range"]::-moz-range-thumb {
  appearance: none;
  margin-top: -0.125rem;
  background-color: #d1d5db;
  height: 0.5rem;
  width: 0.5rem;
  border-radius: 100%;
  transition: .2s;
  z-index: 10;
}
input[type="range"]:focus {
  outline: none;
}
input[type="range"]:hover::-webkit-slider-thumb {
  margin-top: -0.375rem;
  width: 1rem;
  height: 1rem;
  background-color: #d1d5db;
}
input[type="range"]:hover::-moz-range-thumb {
  margin-top: -0.375rem;
  width: 1rem;
  height: 1rem;
  background-color: #d1d5db;
}
input[type="range"]:focus::-webkit-slider-thumb {
  margin-top: -0.375rem;
  width: 1rem;
  height: 1rem;
  background-color: #d1d5db;
}
input[type="range"]:focus::-moz-range-thumb {
  margin-top: -0.375rem;
  width: 1rem;
  height: 1rem;
  background-color: #d1d5db;
}
pre {
  white-space: pre-wrap;
  word-wrap: break-word;
}
svg {
  transform-style: preserve-3d;
  max-width: 100%;
}
table {
  border-spacing: 0;
}
th {
  font-weight: normal;
}
textarea {
  border-radius: 0;
  overflow: auto;
  resize: none;
  vertical-align: top;
}
ul, ol {
  list-style-position: inside;
}

.input-caret {
  caret-color: transparent;
}

#fake-input-caret {
  animation: inputCaret .8s infinite;

  @keyframes inputCaret {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
}

#fake-input-overlay {
  animation: inputOverlay .5s forwards;

  @keyframes inputOverlay {
    0% {
      padding-left: 0;
      padding-right: 0;
    }
    10% {
      padding-left: 32px;
      padding-right: 32px;
    }
    100% {
      width: 100%;
      padding-left: 32px;
      padding-right: 32px;
    }
  }
}

#dashboard-menu-main {
  box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 1px 0px inset, rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;
}

#dashboard-menu-button {
  width: 60px;
  height: 60px;
}

#dashboard-menu-icon {
  width: 40px;
  height: 40px;
  div:first-child {
    top: 8px;
    transition: .1s;
  }
  div:last-child {
    bottom: 8px;
    transition: .1s;
    transition-delay: .1s;
  }

  &.active {
    div:first-child {
      top: 18px;
      transform: rotate(45deg);
    }
    div:last-child {
      bottom: 18px;
      transform: rotate(-45deg);
    }
  }
}

.black-to-transparent-gradient {
  background: linear-gradient(180deg, rgba(31, 33, 46, 0) 0%, rgba(31, 33, 46, 0.8) 56.25%, rgba(31, 33, 46, 0.9) 79.17%, #1F212E 100%);
}

#payment-element {
  font-size: 16px;
  color: #333;
}

#payment-element input::placeholder {
  color: #999;
}

#payment-element .StripeElement--invalid {
  color: #e5424d;
}

.button-loader {
  width: 32px;
  height: 32px;
  display: inline-block;
  position: relative;
}
.button-loader::after,
.button-loader::before {
  content: '';
  box-sizing: border-box;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  border: 2px solid #FFF;
  position: absolute;
  left: 0;
  top: 0;
  animation: animloader 2s linear infinite;
}
.button-loader::after {
  animation-delay: 1s;
}

@keyframes animloader {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}

.svgblob {
  overflow: hidden;
  max-width: 100%;
  width: fit-content;
}

.svgblob svg {
  display: block;
  transform-origin: 50% 50%;
  transition: transform .75s 0s;
  overflow: hidden;
}

[id^="blobmask"] rect {
  fill: #777;
  width: 100%;
  height: 100%
}

[id^="blobmask"] path {
  fill: #000;
}


[id="blobmask-3"] rect {
  fill: #fff;
}

.svgblob:hover svg {
  transition-duration: 1s;
  transform: scale(12);
}

.svgblob path {
  animation: rotatepath 47s linear 0s infinite;
}

.svgblob img {
  position: relative;
  z-index: -1;
  width: 100%;
  height: 100%;
  display: block;
}

@keyframes rotatepath {
  0% { transform: translate(50%, 50%) scale(2.4) rotateZ(360deg); }
  100% { transform:  translate(50%, 50%) scale(2.4) rotateZ(0deg); }
}